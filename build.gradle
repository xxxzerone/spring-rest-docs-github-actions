plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.example'
version = '1.0.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    asciidoctorExt
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

ext {
    restDocsDir = file('src/main/resources/static/docs')
    // default snippetsDir의 값이 build/generated-snippets 이기 때문에 명시적으로 적어줄 필요 없음
//    snippetsDir = file('build/generated-snippets')
}

tasks.named('test') {
    useJUnitPlatform()
    // default snippetsDir의 값을 사용
//    outputs.dir snippetsDir
}

asciidoctor {
    // default snippetsDir의 값을 사용
//    inputs.dir snippetsDir
    configurations 'asciidoctorExt'
//    sources {
//        include '**/*.adoc'
//    }
//    baseDirFollowsSourceFile()
    dependsOn(tasks.named('test'))
}

tasks.register('copyApiDocs', Copy) {
    dependsOn asciidoctor
    doFirst {
        delete file(restDocsDir)
    }
    from asciidoctor.outputDir
    into file(restDocsDir)
}

processResources {
    if (project.hasProperty('prod')) {
        println '>>>>'
        println (project.properties)
        println '@@@@'
    }
}

bootJar {
//    dependsOn(tasks.named('copyApiDocs'))
    /**
     * 아래와 같이 하면 jar 내부에만 포함되기 때문에 파일은 볼 수 없다.
     * jar -tf build/libs/app.jar | grep static/docs
     * 위의 명령어로 확인해보면 static/docs/index.html이 생성되어 있는걸 확인할 수 있다.
     */
    dependsOn(tasks.named('asciidoctor'))
    from("${asciidoctor.outputDir}") {
        into 'static/docs'
    }
}
